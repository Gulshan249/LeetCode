200. Number of Islands

class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        if (grid.empty()) {
            return 0;
        }
        
        int num_islands = 0;
        int rows = grid.size();
        int cols = grid[0].size();
        
        // Define a helper function for DFS
        function<void(int, int)> dfs = [&](int i, int j) {
            if (i < 0 || i >= rows || j < 0 || j >= cols || grid[i][j] == '0') {
                return;
            }
            grid[i][j] = '0'; // Mark the current cell as visited
            // Visit adjacent cells
            dfs(i + 1, j);
            dfs(i - 1, j);
            dfs(i, j + 1);
            dfs(i, j - 1);
        };
        
        // Traverse the grid
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                if (grid[i][j] == '1') {
                    ++num_islands;
                    dfs(i, j);
                }
            }
        }
        
        return num_islands;
    }
};
