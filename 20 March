Merge In Between Linked Lists
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode* dummy = new ListNode();
        dummy->next = list1;
        
        ListNode* prev = dummy;
        
        // Traverse list1 to the ath node
        for (int i = 0; i < a; ++i) {
            prev = prev->next;
        }
        
        // Connect ath node to list2
        ListNode* current = prev->next;
        prev->next = list2;
        
        // Traverse list2 to its end
        while (list2->next != nullptr) {
            list2 = list2->next;
        }
        
        // Connect the last node of list2 to b+1th node of list1
        for (int i = a; i <= b; ++i) {
            current = current->next;
        }
        
        list2->next = current;
        
        return dummy->next;
    }
};
