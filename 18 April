463. Island Perimeter

class Solution {
public:
    int islandPerimeter(vector<vector<int>>& grid) {
        int perimeter = 0;
        int rows = grid.size();
        int cols = grid[0].size();

        // Define directions for neighboring cells
        vector<pair<int, int>> directions = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};

        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                if (grid[i][j] == 1) {
                    for (const auto& dir : directions) {
                        int ni = i + dir.first;
                        int nj = j + dir.second;
                        // Check if the neighbor is out of bounds or a water cell
                        if (ni < 0 || ni >= rows || nj < 0 || nj >= cols || grid[ni][nj] == 0) {
                            perimeter += 1;
                        }
                    }
                }
            }
        }

        return perimeter;
    }
};
