129. Sum Root to Leaf Numbers
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumNumbers(TreeNode* root) {
        if (!root)
            return 0;
        
        int total_sum = 0;
        
        // Define a recursive function to perform depth-first traversal
        function<void(TreeNode*, int)> dfs = [&](TreeNode* node, int current_sum) {
            if (!node)
                return;
            
            current_sum = current_sum * 10 + node->val;
            
            if (!node->left && !node->right) { // Leaf node
                total_sum += current_sum;
                return;
            }
            
            dfs(node->left, current_sum);
            dfs(node->right, current_sum);
        };
        
        dfs(root, 0);
        return total_sum;
    }
};
